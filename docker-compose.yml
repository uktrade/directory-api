version: '2'
services:

  redis:
    image: redis:4.0.9

  postgres:
    image: postgres:9.5.2
    env_file: ./docker/.env-postgres

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.1.2
    environment:
      # Set memory
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      # Disable security
      xpack.security.enabled: "false"
      xpack.monitoring.enabled: "false"
      xpack.graph.enabled: "false"
      xpack.watcher.enabled: "false"
      # Run in development mode to ignore bootstrap checks
      transport.host: "localhost"
    ports: ["9200:9200"]

  webserver:
    build:
      context: .
      dockerfile: Dockerfile.web

    depends_on: [postgres, elasticsearch, redis]
    links: [postgres, elasticsearch, redis]
    working_dir: /usr/src/app
    entrypoint: dockerize -wait tcp://postgres:5432 -timeout 20s -wait http://elasticsearch:9200 -timeout 30s -wait tcp://redis:6379 -timeout 120s
    command: ./docker/cmd-webserver.sh
    ports: ["8000:8000"]
    env_file: ./docker/.env
    restart: "always"

  celery_beat_scheduler:
    build:
      context: .
      dockerfile: Dockerfile.celery_beat_scheduler
    depends_on: [postgres, elasticsearch]
    links: [postgres, elasticsearch]
    working_dir: /usr/src/app
    entrypoint: dockerize -wait tcp://postgres:5432 -timeout 20s -wait http://elasticsearch:9200 -timeout 30s
    command: ./docker/cmd-celery_beat_scheduler.sh
    env_file: ./docker/.env
    restart: "always"


  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile.celery_worker
    depends_on: [postgres, elasticsearch]
    links: [postgres, elasticsearch]
    working_dir: /usr/src/app
    entrypoint: dockerize -wait tcp://postgres:5432 -timeout 20s -wait http://elasticsearch:9200 -timeout 30s
    command: ./docker/cmd-celery_worker.sh
    env_file: ./docker/.env
    restart: "always"
