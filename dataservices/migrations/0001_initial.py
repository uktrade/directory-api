# Generated by Django 4.2.17 on 2025-01-28 11:33

from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                (
                    'created',
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, null=True, verbose_name='created'
                    ),
                ),
                (
                    'modified',
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, null=True, verbose_name='modified'
                    ),
                ),
                ('name', models.CharField(max_length=255, unique=True)),
                ('iso1', models.CharField(max_length=10, unique=True)),
                ('iso2', models.CharField(max_length=10, unique=True)),
                ('iso3', models.CharField(max_length=10, unique=True)),
                ('region', models.CharField(max_length=50)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Country | DIT DATA',
                'verbose_name_plural': 'Countries | DIT DATA',
            },
        ),
        migrations.CreateModel(
            name='CountryTerritoryRegion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                (
                    'created',
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, null=True, verbose_name='created'
                    ),
                ),
                (
                    'modified',
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, null=True, verbose_name='modified'
                    ),
                ),
                ('reference_id', models.CharField(unique=True)),
                ('name', models.CharField(unique=True)),
                (
                    'type',
                    models.CharField(
                        choices=[('Country', 'Country'), ('Territory', 'Territory'), ('Region', 'Region')]
                    ),
                ),
                ('iso1_code', models.CharField(blank=True, null=True)),
                ('iso2_code', models.CharField(blank=True, null=True, unique=True)),
                ('iso3_code', models.CharField(blank=True, null=True, unique=True)),
                ('overseas_region', models.CharField(blank=True, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Country, territory or region | Data Workspace',
                'verbose_name_plural': 'Countries, territories or regions | Data Workspace',
            },
        ),
        migrations.CreateModel(
            name='DBTInvestmentOpportunity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('opportunity_title', models.CharField()),
                ('description', models.CharField()),
                ('nomination_round', models.FloatField()),
                ('launched', models.BooleanField()),
                ('opportunity_type', models.CharField()),
                ('location', models.CharField()),
                ('sub_sector', models.CharField()),
                ('levelling_up', models.BooleanField()),
                ('net_zero', models.BooleanField()),
                ('science_technology_superpower', models.BooleanField()),
                ('sector_cluster', models.CharField()),
            ],
        ),
        migrations.CreateModel(
            name='DBTSector',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sector_id', models.CharField()),
                ('full_sector_name', models.CharField()),
                ('sector_cluster_name', models.CharField()),
                ('sector_name', models.CharField()),
                ('sub_sector_name', models.CharField(blank=True, null=True)),
                ('sub_sub_sector_name', models.CharField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EYBBusinessClusterInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geo_description', models.CharField()),
                ('geo_code', models.CharField()),
                ('sic_code', models.CharField()),
                ('sic_description', models.CharField()),
                ('total_business_count', models.IntegerField(blank=True, null=True)),
                ('business_count_release_year', models.SmallIntegerField(blank=True, null=True)),
                ('total_employee_count', models.IntegerField(blank=True, null=True)),
                ('employee_count_release_year', models.SmallIntegerField(blank=True, null=True)),
                ('dbt_full_sector_name', models.CharField(blank=True, null=True)),
                ('dbt_sector_name', models.CharField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Business Cluster Information for a geographic/standard industrial classification code combination',
                'ordering': ['-business_count_release_year', '-employee_count_release_year'],
            },
        ),
        migrations.CreateModel(
            name='EYBCommercialPropertyRent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geo_description', models.CharField()),
                ('vertical', models.CharField()),
                ('sub_vertical', models.CharField()),
                (
                    'gbp_per_square_foot_per_month',
                    models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True),
                ),
                ('square_feet', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('gbp_per_month', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('dataset_year', models.SmallIntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EYBSalaryData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geo_description', models.CharField()),
                ('vertical', models.CharField()),
                ('professional_level', models.CharField()),
                ('occupation', models.CharField(blank=True, null=True)),
                ('soc_code', models.IntegerField(blank=True, null=True)),
                ('median_salary', models.IntegerField(blank=True, null=True)),
                ('mean_salary', models.IntegerField(blank=True, null=True)),
                ('dataset_year', models.SmallIntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Market',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('reference_id', models.CharField(unique=True)),
                ('name', models.CharField(unique=True)),
                ('type', models.CharField(choices=[('Country', 'Country'), ('Territory', 'Territory')])),
                ('iso1_code', models.CharField(blank=True, null=True, unique=True)),
                ('iso2_code', models.CharField(blank=True, null=True, unique=True)),
                ('iso3_code', models.CharField(blank=True, null=True, unique=True)),
                ('overseas_region_overseas_region_name', models.CharField(blank=True, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('region', models.CharField(blank=True, null=True)),
                ('enabled', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Market | Data Workspace',
                'verbose_name_plural': 'Markets | Data Workspace',
            },
        ),
        migrations.CreateModel(
            name='Metadata',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('view_name', models.CharField(max_length=50, unique=True)),
                ('description', models.CharField(blank=True, default='', max_length=100)),
                ('data', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'verbose_name': 'Metadata',
                'verbose_name_plural': 'Metadata',
            },
        ),
        migrations.CreateModel(
            name='SectorGVAValueBand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_sector_name', models.CharField()),
                ('value_band_a_minimum', models.IntegerField()),
                ('value_band_b_minimum', models.IntegerField()),
                ('value_band_c_minimum', models.IntegerField()),
                ('value_band_d_minimum', models.IntegerField()),
                ('value_band_e_minimum', models.IntegerField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('sector_classification_value_band', models.CharField()),
                ('sector_classification_gva_multiplier', models.CharField()),
            ],
        ),
        migrations.CreateModel(
            name='WorldEconomicOutlookByCountry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ons_iso_alpha_3_code', models.CharField(max_length=3)),
                ('subject_code', models.CharField(max_length=20)),
                ('subject_descriptor', models.CharField(max_length=100)),
                ('subject_notes', models.TextField()),
                ('units', models.CharField(max_length=60)),
                ('scale', models.CharField(blank=True, max_length=10, null=True)),
                ('year', models.PositiveSmallIntegerField()),
                ('value', models.DecimalField(blank=True, decimal_places=3, max_digits=18, null=True)),
                ('estimates_start_after', models.PositiveSmallIntegerField(blank=True)),
                (
                    'country',
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to='dataservices.country',
                        verbose_name='Countries',
                    ),
                ),
            ],
            options={
                'verbose_name': 'World economic outlook by country',
            },
        ),
        migrations.CreateModel(
            name='WorldEconomicOutlook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                (
                    'created',
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, null=True, verbose_name='created'
                    ),
                ),
                (
                    'modified',
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, null=True, verbose_name='modified'
                    ),
                ),
                ('country_code', models.CharField(max_length=50)),
                ('country_name', models.CharField(max_length=255)),
                ('subject', models.CharField(max_length=100)),
                ('scale', models.CharField(max_length=100)),
                ('units', models.CharField(max_length=50)),
                ('year_2020', models.DecimalField(blank=True, decimal_places=3, max_digits=15, null=True)),
                ('year_2021', models.DecimalField(blank=True, decimal_places=3, max_digits=15, null=True)),
                (
                    'country',
                    models.ForeignKey(
                        null=True, on_delete=django.db.models.deletion.SET_NULL, to='dataservices.country'
                    ),
                ),
            ],
            options={
                'verbose_name': 'World Economic Outlooks | IMF',
                'verbose_name_plural': 'World Economic Outlooks | IMF',
            },
        ),
        migrations.CreateModel(
            name='UKTradeInServicesByCountry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period', models.CharField(max_length=20)),
                ('period_type', models.CharField(max_length=10)),
                ('service_code', models.CharField(blank=True, max_length=200, null=True)),
                ('service_name', models.CharField(blank=True, max_length=200, null=True)),
                ('imports', models.PositiveIntegerField(blank=True, null=True)),
                ('exports', models.PositiveIntegerField(blank=True, null=True)),
                (
                    'country',
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to='dataservices.country',
                        verbose_name='Countries',
                    ),
                ),
            ],
            options={
                'verbose_name': 'UK trade in services by country',
            },
        ),
        migrations.CreateModel(
            name='UKTradeInGoodsByCountry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(blank=True, null=True)),
                ('quarter', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('commodity_code', models.CharField(blank=True, max_length=10, null=True)),
                ('commodity_name', models.CharField(max_length=250)),
                ('imports', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('exports', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                (
                    'country',
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to='dataservices.country',
                        verbose_name='Countries',
                    ),
                ),
            ],
            options={
                'verbose_name': 'UK trade in goods by country',
            },
        ),
        migrations.CreateModel(
            name='UKTotalTradeByCountry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ons_iso_alpha_2_code', models.CharField(max_length=2)),
                ('year', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('quarter', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('imports', models.PositiveIntegerField(blank=True, null=True)),
                ('exports', models.PositiveIntegerField(blank=True, null=True)),
                (
                    'country',
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to='dataservices.country',
                        verbose_name='Countries',
                    ),
                ),
            ],
            options={
                'verbose_name': 'UK total trade by country',
            },
        ),
        migrations.CreateModel(
            name='UKFreeTradeAgreement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100)),
                (
                    'country',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to='dataservices.country',
                        verbose_name='Countries',
                    ),
                ),
            ],
            options={
                'verbose_name': 'UK free trade aggreement',
                'verbose_name_plural': 'UK free trade aggreements',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TradingBlocs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                (
                    'created',
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, null=True, verbose_name='created'
                    ),
                ),
                (
                    'modified',
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, null=True, verbose_name='modified'
                    ),
                ),
                ('membership_code', models.CharField(max_length=255)),
                ('iso2', models.CharField(max_length=50)),
                ('country_territory_name', models.CharField(blank=True, max_length=255, null=True)),
                ('trading_bloc_code', models.CharField(max_length=255)),
                ('trading_bloc_name', models.CharField(max_length=255)),
                ('membership_start_date', models.DateField(blank=True, null=True)),
                ('membership_end_date', models.DateField(blank=True, null=True)),
                (
                    'country',
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to='dataservices.country',
                        verbose_name='Countries',
                    ),
                ),
            ],
            options={
                'verbose_name': 'Trading blocs | DIT DATA',
                'verbose_name_plural': 'Trading blocs | DIT DATA',
            },
        ),
        migrations.CreateModel(
            name='SuggestedCountry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                (
                    'created',
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, null=True, verbose_name='created'
                    ),
                ),
                (
                    'modified',
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, null=True, verbose_name='modified'
                    ),
                ),
                ('hs_code', models.PositiveIntegerField(verbose_name='HS Code')),
                ('order', models.PositiveIntegerField(blank=True, null=True, verbose_name='Order')),
                (
                    'country',
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to='dataservices.country',
                        verbose_name='Suggested Countries',
                    ),
                ),
            ],
            options={
                'verbose_name': 'Suggested Country | DIT CREST',
                'verbose_name_plural': 'Suggested Countries | DIT CREST',
            },
        ),
        migrations.CreateModel(
            name='RuleOfLaw',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                (
                    'created',
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, null=True, verbose_name='created'
                    ),
                ),
                (
                    'modified',
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, null=True, verbose_name='modified'
                    ),
                ),
                ('country_name', models.CharField(max_length=255)),
                ('iso2', models.CharField(max_length=50)),
                ('rank', models.IntegerField(blank=True, null=True)),
                ('score', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                (
                    'country',
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to='dataservices.country',
                        verbose_name='Countries',
                    ),
                ),
            ],
            options={
                'verbose_name': 'Rule of Law Rank | Global Innovation Index',
                'verbose_name_plural': 'Rule of Law Rank | Global Innovation Index',
            },
        ),
        migrations.CreateModel(
            name='InternetUsage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                (
                    'created',
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, null=True, verbose_name='created'
                    ),
                ),
                (
                    'modified',
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, null=True, verbose_name='modified'
                    ),
                ),
                ('value', models.DecimalField(blank=True, decimal_places=3, max_digits=15, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                (
                    'country',
                    models.ForeignKey(
                        null=True, on_delete=django.db.models.deletion.SET_NULL, to='dataservices.country'
                    ),
                ),
            ],
            options={
                'verbose_name': 'Internet Usage | World Bank',
                'verbose_name_plural': 'Internet Usage | World Bank',
            },
        ),
        migrations.CreateModel(
            name='Income',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                (
                    'created',
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, null=True, verbose_name='created'
                    ),
                ),
                (
                    'modified',
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, null=True, verbose_name='modified'
                    ),
                ),
                ('year', models.IntegerField(blank=True, null=True)),
                ('value', models.DecimalField(blank=True, decimal_places=3, max_digits=15, null=True)),
                (
                    'country',
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to='dataservices.country',
                        verbose_name='Countries',
                    ),
                ),
            ],
            options={
                'verbose_name': 'Annual Net Adjusted Income per Capita | World Bank',
                'verbose_name_plural': 'Annual Net Adjusted Income per Capita | World Bank',
            },
        ),
        migrations.CreateModel(
            name='GDPPerCapita',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                (
                    'created',
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, null=True, verbose_name='created'
                    ),
                ),
                (
                    'modified',
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, null=True, verbose_name='modified'
                    ),
                ),
                ('year', models.IntegerField(blank=True, null=True)),
                ('value', models.DecimalField(blank=True, decimal_places=3, max_digits=15, null=True)),
                (
                    'country',
                    models.ForeignKey(
                        null=True, on_delete=django.db.models.deletion.SET_NULL, to='dataservices.country'
                    ),
                ),
            ],
            options={
                'verbose_name': 'GDP Per Capita | World Bank',
                'verbose_name_plural': 'GDP Per Capita | World Bank',
            },
        ),
        migrations.CreateModel(
            name='EaseOfDoingBusiness',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                (
                    'created',
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, null=True, verbose_name='created'
                    ),
                ),
                (
                    'modified',
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, null=True, verbose_name='modified'
                    ),
                ),
                ('year', models.IntegerField(blank=True, null=True)),
                ('value', models.DecimalField(blank=True, decimal_places=3, max_digits=15, null=True)),
                (
                    'country',
                    models.ForeignKey(
                        null=True, on_delete=django.db.models.deletion.SET_NULL, to='dataservices.country'
                    ),
                ),
            ],
            options={
                'verbose_name': 'Ease of doing business | World Bank Doing Business',
                'verbose_name_plural': 'Ease of doing business | World Bank Doing Business',
            },
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                (
                    'created',
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, null=True, verbose_name='created'
                    ),
                ),
                (
                    'modified',
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, null=True, verbose_name='modified'
                    ),
                ),
                ('country_name', models.CharField(max_length=255)),
                ('iso2', models.CharField(max_length=50)),
                ('currency_name', models.CharField(max_length=50)),
                ('alphabetic_code', models.CharField(blank=True, max_length=50, null=True)),
                ('numeric_code', models.IntegerField(blank=True, null=True)),
                ('minor_unit', models.CharField(blank=True, max_length=50, null=True)),
                (
                    'country',
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to='dataservices.country',
                        verbose_name='Countries',
                    ),
                ),
            ],
            options={
                'verbose_name': 'Currencies | ISO',
                'verbose_name_plural': 'Currencies | ISO',
            },
        ),
        migrations.CreateModel(
            name='CIAFactbook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                (
                    'created',
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, null=True, verbose_name='created'
                    ),
                ),
                (
                    'modified',
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, null=True, verbose_name='modified'
                    ),
                ),
                ('country_key', models.CharField(max_length=50, unique=True)),
                ('country_name', models.CharField(max_length=255, unique=True)),
                ('factbook_data', models.JSONField(blank=True, default=dict, null=True)),
                (
                    'country',
                    models.ForeignKey(
                        null=True, on_delete=django.db.models.deletion.SET_NULL, to='dataservices.country'
                    ),
                ),
            ],
            options={
                'verbose_name': 'CIA Factbook | CIA',
                'verbose_name_plural': 'CIA Factbook | CIA',
            },
        ),
        migrations.CreateModel(
            name='PopulationUrbanRural',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urban_rural', models.CharField(max_length=5)),
                ('value', models.IntegerField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                (
                    'country',
                    models.ForeignKey(
                        null=True, on_delete=django.db.models.deletion.SET_NULL, to='dataservices.country'
                    ),
                ),
            ],
            options={
                'unique_together': {('urban_rural', 'country', 'year')},
            },
        ),
        migrations.CreateModel(
            name='PopulationData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(blank=True, null=True)),
                ('gender', models.CharField(max_length=6)),
                ('age_0_4', models.PositiveIntegerField(default=None, null=True)),
                ('age_5_9', models.PositiveIntegerField(default=None, null=True)),
                ('age_10_14', models.PositiveIntegerField(default=None, null=True)),
                ('age_15_19', models.PositiveIntegerField(default=None, null=True)),
                ('age_20_24', models.PositiveIntegerField(default=None, null=True)),
                ('age_25_29', models.PositiveIntegerField(default=None, null=True)),
                ('age_30_34', models.PositiveIntegerField(default=None, null=True)),
                ('age_35_39', models.PositiveIntegerField(default=None, null=True)),
                ('age_40_44', models.PositiveIntegerField(default=None, null=True)),
                ('age_45_49', models.PositiveIntegerField(default=None, null=True)),
                ('age_50_54', models.PositiveIntegerField(default=None, null=True)),
                ('age_55_59', models.PositiveIntegerField(default=None, null=True)),
                ('age_60_64', models.PositiveIntegerField(default=None, null=True)),
                ('age_65_69', models.PositiveIntegerField(default=None, null=True)),
                ('age_70_74', models.PositiveIntegerField(default=None, null=True)),
                ('age_75_79', models.PositiveIntegerField(default=None, null=True)),
                ('age_80_84', models.PositiveIntegerField(default=None, null=True)),
                ('age_85_89', models.PositiveIntegerField(default=None, null=True)),
                ('age_90_94', models.PositiveIntegerField(default=None, null=True)),
                ('age_95_99', models.PositiveIntegerField(default=None, null=True)),
                ('age_100_plus', models.PositiveIntegerField(default=None, null=True)),
                (
                    'country',
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to='dataservices.country',
                        verbose_name='Countries',
                    ),
                ),
            ],
            options={
                'verbose_name': 'Target age groups | UN Population division',
                'verbose_name_plural': 'Target age groups | UN Population division',
                'unique_together': {('country', 'gender', 'year')},
            },
        ),
        migrations.CreateModel(
            name='CorruptionPerceptionsIndex',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                (
                    'created',
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, null=True, verbose_name='created'
                    ),
                ),
                (
                    'modified',
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, null=True, verbose_name='modified'
                    ),
                ),
                ('country_name', models.CharField(max_length=255)),
                ('country_code', models.CharField(max_length=50)),
                ('cpi_score', models.IntegerField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('rank', models.IntegerField(blank=True, null=True)),
                (
                    'country',
                    models.ForeignKey(
                        null=True, on_delete=django.db.models.deletion.SET_NULL, to='dataservices.country'
                    ),
                ),
            ],
            options={
                'verbose_name': 'Corruption perceptions indexes  | Transparency International',
                'verbose_name_plural': 'Corruption perceptions indexes  | Transparency International',
                'unique_together': {('country_code', 'year')},
            },
        ),
        migrations.CreateModel(
            name='ConsumerPriceIndex',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                (
                    'created',
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, null=True, verbose_name='created'
                    ),
                ),
                (
                    'modified',
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, null=True, verbose_name='modified'
                    ),
                ),
                ('value', models.DecimalField(blank=True, decimal_places=3, max_digits=15, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                (
                    'country',
                    models.ForeignKey(
                        null=True, on_delete=django.db.models.deletion.SET_NULL, to='dataservices.country'
                    ),
                ),
            ],
            options={
                'verbose_name': 'Consumer price indexes | IMF',
                'verbose_name_plural': 'Consumer price indexes | IMF',
                'unique_together': {('country', 'year')},
            },
        ),
        migrations.CreateModel(
            name='ComtradeReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(blank=True, null=True)),
                ('classification', models.CharField(max_length=3)),
                ('country_iso3', models.CharField(max_length=3)),
                ('uk_or_world', models.CharField(max_length=3)),
                ('commodity_code', models.CharField(max_length=6)),
                ('trade_value', models.DecimalField(blank=True, decimal_places=0, max_digits=15, null=True)),
                (
                    'country',
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to='dataservices.country',
                        verbose_name='Countries',
                    ),
                ),
            ],
            options={
                'indexes': [
                    models.Index(
                        fields=['commodity_code', 'country', 'uk_or_world'], name='dataservice_commodi_c61be8_idx'
                    )
                ],
            },
        ),
    ]
